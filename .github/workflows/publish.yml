name: Publish

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: Log level
        required: true
        default: warning
        type: choice
        options:
          - info
          - warning
          - debug
      print_tags:
        description: True to print to STDOUT
        required: true
        type: boolean
      tags:
        description: Test scenario tags
        required: true
        type: string
      count:
        description: Test count
        required: true
        type: number
      environment:
        description: Environment to run tests against
        type: environment
        required: true
  push:
    branches:
      - master

jobs:
  get-release-tag:
    runs-on: ubuntu-latest
    outputs:
      tag-name: ${{ steps.get_tag_name.outputs.tag-name }}
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          fetch-tags: true  # Fetch all tags

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Run build
        run: npm run build

      - name: Commit changes
        id: commit_changes
        uses: pfaciana/auto-commit-and-version@v1
        with:
          config-json: package.json
          release-type: patch
          commit-message: "build: run build script"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: ${{ vars.DEBUG_MODE || '0' }}

      - name: Sync Versions
        id: sync_versions
        uses: pfaciana/version-sync@v1
        with:
          json-files: package.json
          release-type: patch
          commit-message: Update version to {version}
          tag-message: Release {tag}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: ${{ vars.DEBUG_MODE || '0' }}

      - name: Get tag
        id: get_tag_name
        uses: pfaciana/get-tag-for-next-release@v1
        with:
          match-tag: ${{ steps.sync_versions.outputs.tag-name || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: ${{ vars.DEBUG_MODE || '0' }}

  create-release-and-publish:
    needs: get-release-tag
    if: needs.get-release-tag.outputs.tag-name != ''
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          fetch-tags: true  # Fetch all tags
          ref: ${{ github.ref }} # Get the latest code updated from the previous job

      - name: Create Changelog
        id: create_changelog
        uses: pfaciana/conventional-commits-changelog@v1
        with:
          file: CHANGELOG.md
          desc-header: true
          options: |
            {"types":{"feat_add":"📢 Added","feat_change":"⚡ Changed","feat_remove":"🗑️ Removed","fix":"🐞 Fixed"},"notice":{"keys":{"🚨 BREAKING CHANGES":"/^BREAKING[ -]CHANGE$/"}}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: ${{ vars.DEBUG_MODE || '0' }}

      - name: Create Developer Changelog
        id: create_developer_changelog
        uses: pfaciana/conventional-commits-changelog@v1
        with:
          file: DEVELOPER_CHANGELOG.md
          desc-header: true
          options: |
            {"types":{"feat_add":"📢 Added","feat_change":"⚡ Changed","feat_remove":"🗑️ Removed","fix":"🐞 Fixed","docs":"📚 Documented","test":"🧪 Tested","build":"📦 Built","ci":"🔗 CI","refactor":"🏗️ Refactored","style":"🎨 Styled","perf":"🚀 Performance","chore":"🧹 Chores"},"notice":{"keys":{"🚨 BREAKING CHANGES":"/^BREAKING[ -]CHANGE$/"}}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: ${{ vars.DEBUG_MODE || '0' }}

      - name: Create Release Changelog
        id: create_release_changelog
        uses: pfaciana/conventional-commits-changelog@v1
        with:
          options: |
            {"types":{"feat_add":"📢 Added","feat_change":"⚡ Changed","feat_remove":"🗑️ Removed","fix":"🐞 Fixed","docs":"📚 Documented","test":"🧪 Tested","build":"📦 Built","ci":"🔗 CI","refactor":"🏗️ Refactored","style":"🎨 Styled","perf":"🚀 Performance","chore":"🧹 Chores"},"notice":{"keys":{"🚨 BREAKING CHANGES":"/^BREAKING[ -]CHANGE$/"}},"onlyFirst":true,"onlyBody":true}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_MODE: ${{ vars.DEBUG_MODE || '0' }}

      - name: Create Release w/ Asset
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ format('Release {0}', needs.get-release-tag.outputs.tag-name) }}
          tag_name: ${{ needs.get-release-tag.outputs.tag-name }}
          body: ${{ steps.create_release_changelog.outputs.changelog || '' }}
          files: |
            CHANGELOG.md
            DEVELOPER_CHANGELOG.md

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
